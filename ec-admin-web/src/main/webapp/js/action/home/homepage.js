var count = 0;var num = 0;/** * 判断是否是IE浏览器 *  * 返回True确定是IE浏览器返回False不是IE浏览器 */function isBrower(){	if(!+[1,]){		return true;	}	return false;}/** * 按钮是否可用 *  * @param thiz * @param idBtn */function showEdit(thiz, idBtn) {	var valText = $(thiz).val();	if (valText != "") {		$("#" + idBtn).removeAttr("disabled");		$("#" + idBtn).removeClass("white");	} else {		$("#" + idBtn).attr("disabled", "true");		$("#" + idBtn).addClass("white");	}}/** * 修改按钮的可用状态 *  * @param thiz */function showEditReply(thiz){	var valText = $(thiz).val();	var obj = $(thiz).parent().parent().parent().siblings('ul').children('li');	if (valText != "") {		obj.find('input.btn').removeAttr("disabled");		obj.find('input.btn').removeClass("white");	} else {		obj.find('input.btn').attr("disabled", "true");		obj.find('input.btn').addClass("white");	}}/** * 获取焦点显示隐藏的div *  * @param txt *            文本域对象 * @param divId *            要隐藏或显示Div的ID * @param mes *            文本域的提示消息 * @param btnId *            将此按钮属性修改为不可操作 */function textFieldsHintFocus(txt, divId, mes, btnId) {	if ($(txt).val() == mes) {		$(txt).val("");		$(txt).removeClass("gray3");		$("#" + btnId).attr("disabled", "true");		$("#" + divId).show();	}}/** * 帖子回复获取焦点显示隐藏的操作 *  * @param thiz * @param mes */function textReplyFocus(thiz, mes) {	if ($(thiz).val() == mes) {		$(thiz).val("");		$(thiz).removeClass("gray3");		$(thiz).parent('div').parent('div').parent('form').siblings('ul').children('li').find('input.btn').attr("disabled", "true");		$(thiz).parent('div').parent('div').parent('form').siblings('ul').show();	}}/** * 失去焦点若没有输入信息隐藏div *  * @param thiz *            文本域对象 * @param divId *            要隐藏或显示Div的ID * @param mes *            提示的信息 */function textFieldsHintBlur(thiz, divId, mes) {	// alert($(thiz).val());	if ($(thiz).val() == mes || $(thiz).val() == "") {		$(thiz).val(mes);		// alert(mes);		$(thiz).addClass("gray3");		$("#" + divId).hide();		$("#" + btnId).attr("disabled", "false");	}}/** * 帖子回复失去焦点隐藏操作 *  * @param thiz * @param mes */function textReplyBlur(thiz, mes) {	if (($.trim($(thiz).val()) == "" || $.trim($(thiz).val()) == mes) && isP) {		$(thiz).val(mes);		$(thiz).addClass("gray3");				$(thiz).parent('div').parent('div').parent('form').siblings('ul').hide();		$(thiz).parent('div').parent('div').parent('form').siblings('ul').children('li').find('input.btn').attr("disabled", "false");	}	$(document).click(function(){		if(isP && ($.trim($(thiz).val()) == "" || $.trim($(thiz).val()) == mes)){			$(thiz).val(mes);			$(thiz).addClass("gray3");					$(thiz).parent('div').parent('div').parent('form').siblings('ul').hide();			$(thiz).parent('div').parent('div').parent('form').siblings('ul').children('li').find('input.btn').attr("disabled", "false");		}	});}/** * 点击链接第一步执行第二部 *  * @param oid *            链接第一个要显示的ID * @param tid *            链接操作后的要显示的ID * @param otxt *            用户输入的URL地址 * @param ttxt *            将用户输入的URL地址显示到label中 */function showLink_two(oid, tid, otxt, ttxt) {	var ourl = $("#" + otxt).val();	$("#" + ttxt).html(ourl);	$("#" + oid).hide();	$("#" + tid).show();}/** * 获取焦点将提示信息删除 *  * @param ts *            谁来触发这个事件 * @param mes *            提示信息 */function textFoucs(ts, mes) {	if ($(ts).val() == mes) {		$(ts).val("");		$(ts).removeClass("txtfontcolor");	}}/** * 失去焦点将提示信息显示 *  * @param ts *            谁来触发这个事件 * @param mes *            提示信息 */function textBlur(ts, mes) {	if ($(ts).val() == "") {		$(ts).val(mes);		$(ts).addClass("gray3");	}}var pollCount = 1;/** * 插入text *  * @param thiz *            谁来触发这个事件 * @param txtName *            要插入的控件名字 */function addHTMLText(thiz, txtName) {	var txtValue = $(thiz).val();	var nameProperty = "'"+txtName+"'";	var mes = $(thiz).attr('title');	if(isBrower()){		mes = thiz.title;		if (thiz.tip === "true" && txtValue != "") {			$(thiz).after(				'<div class="poll_answer_list"><input type="text" maxlength="150" id="label_poll_'+pollCount+'" class="text_option input_height" tip="true" name="' + txtName					+ '" oninput="addHTMLText(this,' + nameProperty + ')" onpropertychange="addHTMLText(this,'					+ nameProperty + ')" title='+mes+' /></div>');			thiz.tip = "false";			pollCount++;		}	}else{		if ($(thiz).attr("tip") == "true" && txtValue != "") {						$(thiz).after(				'<div class="poll_answer_list"><input type="text" maxlength="150" id="label_poll_'+pollCount+'" class="text_option input_height" tip="true" name="' + txtName					+ '" oninput="addHTMLText(this,' + nameProperty + ')" onpropertychange="addHTMLText(this,'					+ nameProperty + ')" title='+mes+' /></div>');			$(thiz).attr("tip", "false");			pollCount++;		}	}		$("[id^=label]:text").jLabel({xShift : 7, yShift : 5});	var objInput = $('div.poll_answer_list').find('input.text_option');	objInput.repeatValidate({		textAreaObj : $('#textarea_poll'),		btnObj : $('#create_poll')	});}/** * 插入text *  * @param ts *            谁来触发这个事件 * @param txtName *            要插入的控件名字 */function addHTMLTextInput(ts, txtName) {	var txtValue = $(ts).val();	var nameProperty = "'" + txtName + "'";	var mes = "'增加一个选择答案'";	if ($(ts).attr("tip") == "true" && txtValue != "") {		$(ts).after(			'<input type="text"  onfocus="textFoucs(this,' + mes + ')" onblur="textBlur(this,"' + mes				+ '")" class="gray3 text_option input_height" value="增加一个选择答案" tip="true" name="' + nameProperty				+ '" oninput="addHTMLText(this,' + nameProperty + ')" onpropertychange="addHTMLText(this,'				+ nameProperty + ')" />');	}	$(ts).attr("tip", "false");}/** * checkbox选中状态隐藏两个文本框 *  * @param thiz *            谁来触发这个事件 * @param tido *            第一个文本框 * @param tidt *            第二个文本框 */function showOrHideText(thiz, tido, tidt) {	if ($(thiz)[0].checked) {		$("#" + tido).hide();		$("#" + tidt).hide();		} else {		$("#" + tido).show();		$("#" + tidt).show();	}	$(thiz).parent("span").hide();	$(thiz).parent("span").show();}/** * select选中的内容不同显示不同的信息 *  * @param thiz * @param limitDivId */function showOrHide(thiz, limitDivId) {	if ($(thiz).val() != "limited") {		$("div[id^='"+limitDivId+"']").hide();	} else {		$("div[id^='"+limitDivId+"']").show();	}}/** * div区域鼠标悬浮显示操作 *  * @param thiz *            那个div */function showMouseOverUl(thiz,clazz) {	var ulObject = $(thiz).children("ul").children("."+clazz);	ulObject.show();}/** * div区域鼠标离开隐藏操作 *  * @param thiz *            那个div */function showMouseOutUl(thiz,clazz) {	var ulObject = $(thiz).children("ul").children("."+clazz);	ulObject.hide();}function hideMoreCategory(ts, cagegoryId) {	var ulObject = $(ts).find("ul").children(".li_right");	ulObject.hide();	$("#" + cagegoryId).hide();	sum = 0;}function showMoreCategory(ts, cagegoryId) {	var ulObject = $(ts).find("ul").children(".li_right");	ulObject.show();	if (sum == 1) {		$("#" + cagegoryId).show();	}	// $("#"+cagegoryId).show();}/* * function showMouseOutUlAndDiv(ts,operId){ showMouseOutUl(ts); * $("#"+operId).hide(); } *//** * div区域鼠标悬浮显示操作 *  * @param ts *            那个div * @param tabId *            那个标签 */function showMouseOverUlAndTag(ts, tabId) {	showMouseOverUl(ts);	$("#" + tabId).show();}/** * div区域鼠标离开隐藏操作 *  * @param ts *            那个div * @param tabId *            那个标签 */function showMouseOutUlAndTag(ts, tabId) {	showMouseOutUl(ts);	$("#" + tabId).hide();}/** * 文档-搜索测试用 *  * @param typeId *            第一个下拉列表 * @param contextId *            根据第一个下拉列表显示值的 */function showFileContext(typeId, contextId) {	var typeVal = $("#" + typeId).val();	if (typeVal != "我的文档") {		$("#" + contextId).append('<option value="根据上方内容变化">根据上方内容变化</option>');	} else {		$("#" + contextId).empty();	}}/** * 数遍悬浮显示标签的删除×号 *  * @param tabId *            ×号标签的ID */function showTagDelete(ts) {	$(ts).children('.tab').addClass("cursor");	$(ts).children('.tab').removeClass("displaytxtnone");}/** * 数遍悬浮隐藏标签的删除×号 *  * @param tabId *            ×号标签的ID */function hideTagDelete(ts) {	$(ts).children('.tab').addClass("displaytxtnone");}/** * 鼠标悬浮显示背景色 *  * @param ts *            那个对象 * @param bg_gray1 *            类样式 */function showCategoryBgColor(ts, bg_gray1) {	$(ts).addClass(bg_gray1);}/** * 鼠标悬浮隐藏背景色 *  * @param ts *            那个对象 * @param bg_gray1 *            类样式 */function hideCategoryBgColor(ts, bg_gray1) {	$(ts).removeClass(bg_gray1);}/** * 显示类别的下拉列表展示 *  * @param divId *            列表在那个div上 */function showCategorySelect(divId) {	$("#" + divId).show();	sum = 1;}/** * 隐藏类别的下拉列表展示 *  * @param divId *            列表在那个div上 */function editCategorySelect(divId) {	$("#" + divId).hide();	count = 1;	sum = 0;}/* * function showMoreActions(ts,divId){ var p = $(ts).offset(); var x = * p.left-90+"px"; var y = p.top+20+"px"; * $("#"+divId).css({left:x,top:y,width:"100px"}); $("#"+divId).show(); } *//** * 打开dialog窗体 *  * @param dialogId *            那个dialog */function showFileEdit(dialogId) {	$("#" + dialogId).dialog('open');}/** * 关闭dialog窗体 *  * @param dialogId *            那个dialog */function closeDialog(dialogId) {	$("#" + dialogId).dialog("close");}/** * 将选择的类别显示到页面 *  * @param divId *            显示列表的div * @param hId *            在页面那个位置显示选中的信息 * @param thiz *            当前对象 * @param textHiddenId *            隐藏域ID */function updateCategory(divId, hId, thiz, textHiddenId) {	editCategorySelect(divId);	var categoryVal = $(thiz).html();	while (categoryVal.indexOf("&nbsp") != -1) {		categoryVal = categoryVal.replace(/&nbsp;/g, "");	}	if ($("#" + hId).html() != null) {		$("#" + hId).html(categoryVal);	}	if ($("." + hId).html() != null) {		$("." + hId).html(categoryVal);	}		$('#'+textHiddenId).val(categoryVal);}/** * 调用此函数必须按以下规则： 1、显示给用户看的地方必须使用shar样式 * 2、隐藏域（也就是给后台服务器获取的）样式必须使用share，传递的方式为typeId,type，例如12345678,group *  * @param shareList * @param feedId * @param thiz * @param shareType */function updateShareReange(shareList,typeId,thiz,shareType){	editCategorySelect(shareList);	var shareVal = $(thiz).html();	shareVal = shareVal.replace(/&nbsp;/g,"");	$('span.share').each(function(i){		if(shareVal.length > 8)			shareVal = shareVal.substring(0,8)+"...";		$(this).html(shareVal);		// $(this).text('<a class="cutLen">' + shareVal + '</a>');	});	$('input:hidden.share').each(function(i){		$(this).val(typeId+","+shareType);	});}/** * dialog-更新文件中上传，隐藏第一步显示第二步 *  * @param oneId *            第一步的div * @param oneId *            第二步的div */function showAndHideDivTwo(oneId, twoId) {	$("#" + oneId).hide();	$("#" + twoId).show();}/** * dialog-更新文件中上传，显示第一步隐藏第二步 *  * @param oneId *            第一步的div * @param oneId *            第二步的div */function hideAndShowDivTwo(oneId, twoId) {	$("#" + oneId).show();	$("#" + twoId).hide();}/** * 同步文本域输入内容 *  * @param tc *            文本域的类样式 * @param thiz *            当前对象 */function updateTxt(tc, thiz, isShowH) {	var txtVal = $(thiz).val();	$("." + tc).each(		function(i) {			$(this).val(txtVal);			$(this).removeClass("gray3");			$(this).parent("div").parent('form').siblings("ul.displaytxtnone").show();			$(this).parent("div").parent('form').siblings("ul.displaytxtnone").children("li.li_right").children("input.btn")				.removeAttr("disabled").removeClass("white");			if (txtVal == "" && isShowH || txtVal == $(this).attr("title") && isShowH) {				$(this).addClass("gray3");				$(this).val($(this).attr("title"));				$(this).parent("div").parent('form').siblings("ul.displaytxtnone").children("li.li_right").children("input.btn").attr(					"disabled", "true").addClass("white");				$(this).parent("div").parent('form').siblings("ul.displaytxtnone").hide();			}			if (txtVal == "" || txtVal == $(this).attr("title")) {				$(this).parent("div").parent('form').siblings("ul.displaytxtnone").children("li.li_right").children("input.btn").attr(					"disabled", "true").addClass("white");						}		});}/** * 显示共享范围的div *  * @param thiz *            点钱对象 * @param 要显示 *            divId 层ID */function showShareRange(thiz, divId) {	var divObj = $("#" + divId);	var p = $(thiz).offset();	var l = p.left - $("#" + divId).width() + "px";	var t = p.top + $(thiz).height() + "px";	divObj.css({ left : l, top : t });	divObj.show();	count = 1;}/** * 显示回复的div并获取文本域的焦点 *  * @param divId *            回复的div */function showQuickReply(divId) {	$("#" + divId).show();	$("#" + divId).children("div").children("div").children(".expand").focus();}function showVersOper(ts) {	// alert($(ts).children("li.updown_right").children("span").html());	$(ts).children("li.updown_right").children("span").show();}function hideVersOper(ts) {	$(ts).children("li.updown_right").children("span").hide();}/** * 单击div显示文本域输入框 *  * @param spanId *            span的标签 * @param textareaId *            文本域的Id */function clickDivShowTextarea(spanId,textareaId){	$('#'+spanId).hide();	$('#'+textareaId).show().focus();}/** * 焦点离开文本域若值为空就显示Span标签 *  * @param spanId * @param thiz */function emptyShowSpanHideTextarea(spanId,thiz){	if($(thiz).val()!=""){		return;	}	$(thiz).hide();	$('#'+spanId).show();}/** * 共享选项卡内容的显示和隐藏 *  * @param sm *            一共几个 * @param im *            要显示第几个 */function showDiv(sm,im){	for(var i=0;i<sm;i++){		if(im==i){			$(".div"+i).show();		}else{			$(".div"+i).hide();		}	}}/** * 隐藏一个DIV并显示一个DIV *  * @param divOId *            要隐藏的DIV * @param divTId *            要显示的DIV */function divChange(divOId, divTId) {	$("#" + divOId).hide();	$("#" + divTId).show();}/** * 隐藏一个DIV信息 *  * @param divId */ function hideVersionInfo(divId) {	$("#" + divId).hide();}// ============================================================// 选项卡JS// ============================================================/** * 选项卡中三角图形的定位 *  * @param spanId */function iconSharePosition(spanId) {	var spanObj = $('#' + spanId)[0];	var l = spanObj.offsetLeft + spanObj.offsetWidth + 'px';	$('#arrow').css({'z-index' : '1', 'top' : '1px' });	$('#arrow').animate({		left:l	},500);	//$('#arrow').css({ 'left' : l, 'z-index' : '1', 'top' : '1px' });}/** * 选项卡中帖子、问题、链接、投票、事件、任务等得添加 *  * @param thiz * @param fromId */function feedAction(thiz, fromId,type) {	var textareaObj = $(thiz).parent().parent().siblings('form').children('div').children("textarea");	$(thiz).attr('disabled','disabled').addClass('white');	if(textareaObj.attr('id') != undefined)	{		if(textareaObj.val() == textareaObj.attr('title') || textareaObj.val() == ""){			textareaObj.focus();			return;		}	}	$("#" + fromId).ajaxSubmit({ type : 'post', dataType : 'html', success : function(data) {		// open_tip('info','success',3);		$("#split").after(data);		formatDateStr('.format_str');		expandOrShrink('expand','shrink');		reloadSharTabs(type);		if(addFeedIdArray){			addFeedIdArray[addFeedIdArray.length] = GetRandomString(32);		}	} });}function getParams(){	params = params.replace("{", "");	params = params.replace("}", "");	var paramString="";	if(params){		var paramArray = params.split(',');		for(var i=0;i<paramArray.length;i++){			if(paramArray[i].indexOf("=")>0){				if(i==0){					paramString+="?";				}else{					paramString+="&";				}			}else{				paramString+=",";			}			paramString+=paramArray[i];		}	}	return paramString.replace(new RegExp(" ","gm"),"");}function doCallbackFunction(type){	var startIndex = params.indexOf("callbackFunction");	if(startIndex>=0){		var endIndex = params.indexOf(",",startIndex);		var functionName="";		if(endIndex>0){			functionName = params.substring(params.indexOf("=",startIndex)+1, endIndex);		}else{			functionName = params.substring(params.indexOf("=",startIndex)+1, params.length-1);		}		eval(functionName+"('"+type+"')");			}}/** * 刷新共享选项卡 */function reloadSharTabs(type) {	doCallbackFunction(type);	var url_path = area + "/post_feed/reload_share_tabs"+getParams();	$('#share_tabs').children().remove();	$('#share_tabs').load(url_path);}/** * 将选项卡中事件区域的日期和时间合并，例如：日期为：2011-10-02时间为10:35，合并为2011-10-02 10:35 *  * @param mergeDateId *            合并后的日期时间要显示在那个文本框 * @param dateId *            日期输入框ID * @param timeId *            时间输入框ID */function mergeDate(mergeDateId, dateId, timeId) {	var time = "";	time = $("#" + timeId).val();	if($("#" + timeId).val() == "")		time = "00:00:00";	if(time.length <= 5)		time += ":00";	$("#" + mergeDateId).val($("#" + dateId).val() + " " + time + "");}/** * 共享选项卡中链接第二部操作预览 *  * @param linkStepId */function linkStepOne(thiz,linkStepId) {	$(thiz).attr('disabled','disabled').addClass('white');	$('#feed_link_step_one').ajaxSubmit({ type : 'post', dataType : 'html', success : function(data) {		$('#' + linkStepId).hide();		$('#link_step_two').after(data);	} });}function linkStepTwo(thiz,linkStepId){	$('#link_two').remove();	$('#div_shart').hide();	$('#textarea_link_o').val('http://');	$('#' + linkStepId).show();}/** * 共享选项卡中添加链接时将第二部操作内容删除并将第一部内容显示 *  * @param linkStepOneId * @param linkStepTwoId */function linkReduction(linkStepOneId, linkStepTwoId) {	$('#' + linkStepOneId).show();	$('#' + linkStepTwoId).remove();}function showTabContent(thiz,spanId,tab1,tab2){	$(thiz).addClass('span_title_selected');	$('#'+spanId).removeClass('span_title_selected');	$('#'+tab1).hide();	$('#'+tab2).show();}function focusRemoveClass(thiz,classStyle){	$(thiz).removeClass(classStyle);}function blurAddClass(thiz,classStyle){	$(thiz).addClass(classStyle);}function expand(clazz){	$('a.'+clazz).each(function(){		$(this).click(function(){			$(this).hide();			$(this).parent().siblings().show();			});	});	}function shrink(clazz){	$('a.'+clazz).each(function(){		$(this).click(function(){			$(this).parent().hide();			$(this).parent().siblings().children('a').show();		});	});}function expandOrShrink(eclazz,sclazz){	if($('div.autolink').size() > 0){		$('div.autolink').autolink();	}	expand(eclazz);	shrink(sclazz);}/** * 限定输入字符长度 *  * @param thiz * @param length */function limitChars(thiz,length){	var obj = $(thiz);	var objVal = obj.val();	if(objVal.length > length){		obj.val(obj.val().substr(0,length));	}}/** * 关闭blockUI插件 */function closeBlockUI(){//	 $.unblockUI();	openScreen();}/** * 打开blockUI插件 */function openBlockUI(message){//	$.blockUI({ message: message }); 	lockScreen(message);}/** * 导出部分初始blockUI插件 */function initExportBlockUI(objID){	/*var obj = document.getElementById(objID); 	if(obj.attachEvent){		obj.attachEvent("onreadystatechange", function(){			 if (obj.readyState == "interactive") {  				 closeBlockUI();			    }  	    });	}else{		obj.onload = function() {			closeBlockUI();		};	}*/}